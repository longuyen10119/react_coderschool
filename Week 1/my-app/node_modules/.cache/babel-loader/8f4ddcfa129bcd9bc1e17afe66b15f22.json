{"ast":null,"code":"import _regeneratorRuntime from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/longnguyen/React Native/Week 1/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport fakeData from './now_playing.json';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button, CardDeck } from 'reactstrap';\nimport ReactLoading from 'react-loading';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport ReactSearchBox from 'react-search-box';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.sleep = function (m) {\n      return new Promise(function (r) {\n        return setTimeout(r, m);\n      });\n    };\n\n    _this.toggleNavbar = _this.toggleNavbar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      moviesList: [],\n      isVisible: true,\n      collapsed: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"toggleNavbar\",\n    value: function toggleNavbar() {\n      this.setState({\n        collapsed: !this.state.collapsed\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, movieData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=a07e22bc18f5cb106bfe4cc1f83ad8ed');\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                movieData = _context.sent;\n                _context.next = 8;\n                return this.sleep(1000);\n\n              case 8:\n                this.setState({\n                  moviesList: movieData.results,\n                  isVisible: false\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"refreshPage\",\n    value: function refreshPage() {\n      window.location.reload();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        color: \"faded\",\n        light: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(NavbarToggler, {\n        onClick: this.toggleNavbar,\n        className: \"mr-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(NavbarBrand, {\n        href: \"/\",\n        className: \"mr-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Flickies\"), React.createElement(Collapse, {\n        isOpen: !this.state.collapsed,\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        navbar: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(ReactSearchBox, {\n        placeholder: \"Search\",\n        value: \"\",\n        data: this.state.moviesList,\n        callback: function callback(record) {\n          return console.log(record);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })))))), this.state.isVisible === true ? React.createElement(ReactLoading, {\n        type: \"spinningBubbles\",\n        color: \"red\",\n        height: 100,\n        width: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }) : this.state.moviesList.map(function (movie) {\n        return React.createElement(Movie, {\n          title: movie.title,\n          overview: movie.overview,\n          id: movie.id,\n          poster_path: movie.poster_path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Movie, _Component2);\n\n  function Movie() {\n    _classCallCheck(this, Movie);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Movie).apply(this, arguments));\n  }\n\n  _createClass(Movie, [{\n    key: \"render\",\n    value: function render() {\n      var moviePath = 'https://image.tmdb.org/t/p/w342' + this.props.poster_path;\n      return React.createElement(Card, {\n        id: this.props.id,\n        body: true,\n        outline: true,\n        color: \"secondary\",\n        inverse: true,\n        style: {\n          backgroundColor: '#333',\n          borderColor: '#333'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        top: true,\n        width: 100,\n        height: 200,\n        src: moviePath,\n        alt: \"Card image cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.title)), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, this.props.overview)));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/longnguyen/React Native/Week 1/my-app/src/App.js"],"names":["React","Component","fakeData","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","CardDeck","ReactLoading","Collapse","Navbar","NavbarToggler","NavbarBrand","Nav","NavItem","NavLink","ReactSearchBox","App","sleep","m","Promise","r","setTimeout","toggleNavbar","bind","state","moviesList","isVisible","collapsed","setState","fetch","response","json","movieData","results","window","location","reload","record","console","log","map","movie","title","overview","id","poster_path","Movie","moviePath","props","backgroundColor","borderColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport fakeData from './now_playing.json';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button, CardDeck } from 'reactstrap';\nimport ReactLoading from 'react-loading';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport ReactSearchBox from 'react-search-box'\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      moviesList: [],\n      isVisible: true,\n      collapsed: true,\n    };\n  }\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  sleep = m => new Promise(r => setTimeout(r,m));\n  async componentDidMount () {\n    const response = await fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=a07e22bc18f5cb106bfe4cc1f83ad8ed');\n    const movieData = await response.json();\n    await this.sleep(1000)\n    this.setState({\n      moviesList: movieData.results,\n      isVisible: false,\n\n    })\n  }\n  refreshPage() {\n    window.location.reload();\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <div>\n          <Navbar color=\"faded\" light>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n          <NavbarBrand href=\"/\" className=\"mr-auto\">Flickies</NavbarBrand>\n          <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav navbar>\n              <NavItem>\n                <ReactSearchBox\n                  placeholder=\"Search\"\n                  value=\"\"\n                  data={this.state.moviesList}\n                  callback={record => console.log(record)}\n                />\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        </div>\n        {\n          this.state.isVisible === true ? (\n            <ReactLoading type={\"spinningBubbles\"} color={\"red\"} height={100} width={100} />\n          ) : (\n            this.state.moviesList.map(movie => {\n              return(\n                <Movie \n                  title={movie.title}\n                  overview={movie.overview}\n                  id={movie.id}\n                  poster_path={movie.poster_path}\n                />\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\nclass Movie extends Component{\n  render(){\n    const moviePath = 'https://image.tmdb.org/t/p/w342' + this.props.poster_path;\n    return (\n      \n      <Card id={this.props.id} body outline color=\"secondary\" inverse style={{ backgroundColor: '#333', borderColor: '#333' }}>\n        <CardImg top width={100} height={200} src={moviePath} alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle><h3>{this.props.title}</h3></CardTitle>\n          <CardSubtitle>{this.props.overview}</CardSubtitle>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}