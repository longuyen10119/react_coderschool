{"ast":null,"code":"import _regeneratorRuntime from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/longnguyen/React Native/Week 1/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/longnguyen/React Native/Week 1/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport fakeData from './now_playing.json';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport ReactLoading from 'react-loading';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.sleep = function (m) {\n      return new Promise(function (r) {\n        return setTimeout(r, m);\n      });\n    };\n\n    _this.state = {\n      moviesList: [],\n      isVisible: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, movieData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=a07e22bc18f5cb106bfe4cc1f83ad8ed');\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                movieData = _context.sent;\n                _context.next = 8;\n                return this.sleep(2000);\n\n              case 8:\n                this.setState({\n                  moviesList: movieData.results,\n                  isVisible: false\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.state.isVisible === true ? React.createElement(ReactLoading, {\n        type: \"spinningBubbles\",\n        color: \"red\",\n        height: 100,\n        width: 100,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }) : this.state.moviesList.map(function (movie) {\n        return React.createElement(Movie, {\n          title: movie.title,\n          overview: movie.overview,\n          id: movie.id,\n          poster_path: movie.poster_path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar Movie =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Movie, _Component2);\n\n  function Movie() {\n    _classCallCheck(this, Movie);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Movie).apply(this, arguments));\n  }\n\n  _createClass(Movie, [{\n    key: \"render\",\n    value: function render() {\n      var moviePath = 'https://image.tmdb.org/t/p/w342' + this.props.poster_path;\n      console.log(moviePath);\n      return React.createElement(Card, {\n        body: true,\n        inverse: true,\n        color: \"primary\",\n        id: this.props.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CardImg, {\n        top: true,\n        width: 200,\n        height: 300,\n        src: moviePath,\n        alt: \"Card image cap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(CardTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.title)), React.createElement(CardSubtitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.props.overview), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movie;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/longnguyen/React Native/Week 1/my-app/src/App.js"],"names":["React","Component","fakeData","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","ReactLoading","App","sleep","m","Promise","r","setTimeout","state","moviesList","isVisible","fetch","response","json","movieData","setState","results","map","movie","title","overview","id","poster_path","Movie","moviePath","props","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport fakeData from './now_playing.json';\nimport { Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport ReactLoading from 'react-loading';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      moviesList: [],\n      isVisible: true,\n    };\n  }\n\n  sleep = m => new Promise(r => setTimeout(r,m));\n  async componentDidMount () {\n    const response = await fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=a07e22bc18f5cb106bfe4cc1f83ad8ed');\n    const movieData = await response.json();\n    await this.sleep(2000)\n    this.setState({\n      moviesList: movieData.results,\n      isVisible: false,\n\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {\n          this.state.isVisible === true ? (\n            <ReactLoading type={\"spinningBubbles\"} color={\"red\"} height={100} width={100} />\n          ) : (\n            this.state.moviesList.map(movie => {\n              return(\n                <Movie \n                  title={movie.title}\n                  overview={movie.overview}\n                  id={movie.id}\n                  poster_path={movie.poster_path}\n                />\n              )\n            })\n          )\n        }\n      </div>\n    );\n  }\n}\nclass Movie extends Component{\n  render(){\n    const moviePath = 'https://image.tmdb.org/t/p/w342' + this.props.poster_path;\n    console.log(moviePath)\n    return (\n      <Card body inverse color=\"primary\" id={this.props.id}>\n        <CardImg top width={200} height={300} src={moviePath} alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle><h3>{this.props.title}</h3></CardTitle>\n          <CardSubtitle>{this.props.overview}</CardSubtitle>\n          <h1></h1>\n        </CardBody>\n      </Card>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}